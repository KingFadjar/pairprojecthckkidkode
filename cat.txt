'use strict';
const { Model } = require('sequelize');
const bcrypt = require('bcryptjs');
const { hashPass } = require('../helpers/hash');

module.exports = (sequelize, DataTypes) => {
  class User extends Model {
    /**
     * Helper method for defining associations.
     * This method is not a part of Sequelize lifecycle.
     * The `models/index` file will call this method automatically.
     */
    static associate(models) {
      // define association here
    }

    // Add findOne method
    static async findByUsername(username) {
      return await this.findOne({ where: { username } });
    }
  }

  User.init({
    username: DataTypes.STRING,
    email: DataTypes.STRING,
    password: DataTypes.STRING,
    role: DataTypes.STRING
  }, {
    hooks: {
      beforeCreate: async (instance, options) => {
        if (instance.password) {
          instance.password = await hashPass(instance.password);
        }
      },
    },
    sequelize,
    modelName: 'User',
  });

  return User;
};
